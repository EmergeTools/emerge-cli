name: Build Tree-Sitter Parsers

on:
  push:
    branches:
      - main
      - telkins/build-dylibs
    paths:
      - 'parsers.toml'
      - '.github/workflows/build_parsers.yml'
  workflow_dispatch:

jobs:
  build-parsers:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: macos

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install tsdl
        run: |
          cargo install tsdl

      - name: Build tree-sitter parsers
        run: |
          tsdl build

      - name: Rename built parsers to include platform
        run: |
          for dir in parsers/*; do
            if [ -d "$dir/src" ]; then
              lib_dir="$dir/src"
              cd "$lib_dir"
              for file in *; do
                if [ -f "$file" ]; then
                  extension="${file##*.}"
                  base="${file%.*}"
                  mv "$file" "${base}-${{ matrix.platform }}.${extension}"
                fi
              done
              cd - > /dev/null
            fi
          done

      - name: Configure git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Check for changes
        id: changes
        run: |
          git add -A
          if git diff --cached --quiet; then
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Pull latest changes
        if: steps.changes.outputs.changes == 'true'
        run: |
          git pull --rebase --autostash

      - name: Commit changes
        if: steps.changes.outputs.changes == 'true'
        run: |
          git commit -m "Build tree-sitter parsers for ${{ matrix.platform }} [skip ci]"

      - name: Push changes
        if: steps.changes.outputs.changes == 'true'
        run: |
          git push
